// DOM2级事件

let box = document.getElementById('box');

function fn1(){
    console.log(1);
}
function fn2(){
    console.log(2);
}
function fn3(){
    console.log(3);
}
box.addEventListener('click', fn1, false);
box.addEventListener('click', fn2, false);
box.addEventListener('click', fn3, false);

// ??? DOM2级怎么实现可以给一个元素的同一个事件绑定多个事件函数? 因为DOM2级事件给每个元素的每个事件都设置了一个事件泏,类似
// 数组的东西,每次addEventLister() 都是向事件池中添加函数;
// 等到事件真正触发时,把函数从事件池中一个一个的拿出来执行;

// js中的事件是元素或者浏览器发生特定的交互瞬间;也就是说事件是一个时刻;

// 事件思想: 所有的时刻都可以称为一个事件,例如5S后/动画结束后/....都是一个具体的时刻,所以5s后和动画结束后都可以叫做事件;

// ?? 思考: 既然5s后和动画结束后都是事件,那么怎么监听这些事件? 事件发生时怎么让事件函数执行?\

// 发布订阅: 模拟DOM2级事件的事件池思想,当某一个时刻到来我们要做很多事情(执行很多个函数); 准备一个数级当做事件池,并且提供
// 向事件池中添加函数以及移除函数的方法,并且等到该时刻到来时,把事件池中的函数一个一个的执行了; 这种解决问题的方法称为
// 发布订阅模式(观察者模式);

// 发布订阅:
// 订阅: 订阅某个时刻到来时,把要做的事情放到事件池中;
// 发布: 时刻到来,把事件池中的方法都执行了;

setTimeout(() => {
    // 5s后
    

}, 5000);




